// <auto-generated />
using System;
using FitnessClub.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FitnessClub.Migrations
{
    [DbContext(typeof(FitnessClubContext))]
    partial class FitnessClubContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FitnessClub.Models.FitnessLesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("ScheduleId");

                    b.HasKey("LessonId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("FitnessLesson");
                });

            modelBuilder.Entity("FitnessClub.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginDate");

                    b.Property<DateTime>("EndDate");

                    b.Property<int?>("UserFitnessLessonId");

                    b.HasKey("ScheduleId");

                    b.HasIndex("UserFitnessLessonId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("FitnessClub.Models.Trainer", b =>
                {
                    b.Property<int>("TrainerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("ScheduleId");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("Surname");

                    b.HasKey("TrainerId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Trainer");
                });

            modelBuilder.Entity("FitnessClub.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("Surname");

                    b.Property<int?>("UserFitnessLessonId");

                    b.HasKey("UserId");

                    b.HasIndex("UserFitnessLessonId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FitnessClub.Models.UserFitnessLesson", b =>
                {
                    b.Property<int>("UserFitnessLessonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("UserFitnessLessonId");

                    b.ToTable("UserFitnessLesson");
                });

            modelBuilder.Entity("FitnessClub.Models.FitnessLesson", b =>
                {
                    b.HasOne("FitnessClub.Models.Schedule", "Schedule")
                        .WithMany("FitnessLessons")
                        .HasForeignKey("ScheduleId");
                });

            modelBuilder.Entity("FitnessClub.Models.Schedule", b =>
                {
                    b.HasOne("FitnessClub.Models.UserFitnessLesson")
                        .WithMany("Schedules")
                        .HasForeignKey("UserFitnessLessonId");
                });

            modelBuilder.Entity("FitnessClub.Models.Trainer", b =>
                {
                    b.HasOne("FitnessClub.Models.Schedule", "Schedule")
                        .WithMany("Trainers")
                        .HasForeignKey("ScheduleId");
                });

            modelBuilder.Entity("FitnessClub.Models.User", b =>
                {
                    b.HasOne("FitnessClub.Models.UserFitnessLesson", "UserFitnessLesson")
                        .WithMany("Users")
                        .HasForeignKey("UserFitnessLessonId");
                });
#pragma warning restore 612, 618
        }
    }
}
